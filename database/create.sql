PRAGMA journal_mode = WAL;
PRAGMA foreign_keys = ON;

DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS (
	id INTEGER PRIMARY KEY,
	username TEXT,
	name TEXT
);

DROP TABLE IF EXISTS FILES;
CREATE TABLE FILES(
	id INTEGER PRIMARY KEY,
	filename TEXT,
	hash TEXT,
	author_id INTEGER REFERENCES USERS(id),
	type_id INTEGER REFERENCES FILE_TYPES(id)
);

DROP TABLE IF EXISTS FACULTIES;
CREATE TABLE FACULTIES(
    id INTEGER PRIMARY KEY,
    name TEXT,
    shortname TEXT,
    color TEXT,
    logo_id INTEGER REFERENCES FILES(id)
);

DROP TABLE IF EXISTS SUBJECTS;
CREATE TABLE SUBJECTS(
    id INTEGER PRIMARY KEY,
    name TEXT
);

DROP TABLE IF EXISTS OFFICIAL_SUBJECTS;
CREATE TABLE OFFICIAL_SUBJECTS(
    id INTEGER PRIMARY KEY,
    code TEXT,
    name TEXT,
    faculty_id INTEGER REFERENCES FACULTIES(id),
    subject_id INTEGER REFERENCES SUBJECTS(id)
);

DROP TABLE IF EXISTS POSTS;
CREATE TABLE POSTS(
    id INTEGER PRIMARY KEY,
    title TEXT,
    date_created INTEGER,
    author_id INTEGER REFERENCES USERS(id),
    subject_id INTEGER REFERENCES SUBJECTS(id),
    type_id INTEGER REFERENCES POST_TYPES(id)
);

DROP TABLE IF EXISTS COMMENTS;
CREATE TABLE COMMENTS(
    id INTEGER PRIMARY KEY,
    content TEXT,
    author_id INTEGER REFERENCES USERS(id),
    reply_to_id INTEGER REFERENCES COMMENTS(id),
    subject_id INTEGER REFERENCES SUBJECTS(id),
    post_id INTEGER REFERENCES POSTS(id),
    CONSTRAINT xor_target CHECK ((subject_id IS NOT NULL AND post_id IS NULL) OR (subject_id IS NULL AND post_id IS NOT NULL))
);

DROP TABLE IF EXISTS GROUPS;
CREATE TABLE GROUPS(
    id INTEGER PRIMARY KEY,
    name TEXT
);

DROP TABLE IF EXISTS PERMISSIONS;
CREATE TABLE PERMISSIONS(
    id INTEGER PRIMARY KEY,
    name TEXT
);

DROP TABLE IF EXISTS FILE_TYPES;
CREATE TABLE FILE_TYPES(
    id INTEGER PRIMARY KEY,
    name TEXT
);

DROP TABLE IF EXISTS POST_TYPES;
CREATE TABLE POST_TYPES(
    id INTEGER PRIMARY KEY,
    name TEXT
);

DROP TABLE IF EXISTS POST_FILES;
CREATE TABLE POST_FILES(
    post_id INTEGER REFERENCES POSTS(id),
    file_id INTEGER REFERENCES FILES(id),
    PRIMARY KEY(post_id, file_id)
);

DROP TABLE IF EXISTS GROUP_PERMISSIONS;
CREATE TABLE GROUP_PERMISSIONS(
    group_id INTEGER REFERENCES GROUPS(id),
    permission_id INTEGER REFERENCES PERMISSIONS(id),
    PRIMARY KEY(group_id, permission_id)
);

DROP TABLE IF EXISTS GROUP_USERS;
CREATE TABLE GROUP_USERS(
    group_id INTEGER REFERENCES GROUPS(id),
    user_id INTEGER REFERENCES USERS(id),
    PRIMARY KEY(group_id, user_id)
);

PRAGMA foreign_keys = OFF;